{"version":3,"file":"static/js/230.7078a920.chunk.js","mappings":"yPAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,UCJvB,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,6BAA6B,aAAe,8BAA8B,cAAgB,+BAA+B,gBAAkB,iCAAiC,cAAgB,gC,UCc3Z,MAVA,SAAoBE,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCDtC,MANA,SAAiBN,GACb,OACI,gBAAKG,UAAWC,EAAAA,OAAhB,SAA2BJ,EAAMO,W,UC0DzC,IASMC,GAAsBC,E,OAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EATL,SAACT,GACpB,OACI,kBAAMW,SAAUX,EAAMY,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOX,GAAIE,EAAAA,gBAAmBU,UAAU,WAAWR,KAAK,iBAAiBS,YAAY,gCACrF,mBAAQb,GAAIE,EAAAA,cAAZ,yBAOZ,EAlEA,SAAiBJ,GAEb,IAAIgB,EAAkBhB,EAAMiB,YAAYC,QAAQC,KAAI,SAAAC,GAChD,OACI,iBAAKjB,UAAWC,EAAAA,OAAhB,WACI,iBAAKD,UAAWC,EAAAA,YAAhB,WACI,gBACIiB,IAAKD,EAAEE,IACPC,IAAI,SACJpB,UAAWC,EAAAA,UAEf,SAAC,EAAD,CAAYE,KAAMc,EAAEd,KAAMJ,GAAIkB,EAAElB,SAEpC,wBAORsB,EAAmBxB,EAAMiB,YAAYQ,SAASN,KAAI,SAAAO,GAClD,OAEI,iBAAKvB,UAAWC,EAAAA,YAAhB,WACI,gBACIiB,IAAKK,EAAEJ,IACPC,IAAI,SACJpB,UAAWuB,EAAEC,UAEjB,SAAC,EAAD,CAASpB,QAASmB,EAAEnB,gBAWhC,OAAKP,EAAMF,QAGP,iBAAKK,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SAAkCY,KAClC,iBAAKb,UAAWC,EAAAA,SAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SAAiCoB,KACjC,0BACI,SAAChB,EAAD,CAAqBG,SAZjB,SAACiB,GACjB5B,EAAM6B,WAAWD,EAAOE,4BAGF,SAAC,KAAD,CAAUzB,GAAG,YCD3C,GAAe0B,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAbkB,SAACnC,GACnB,MAAO,CACHoB,YAAapB,EAAMoB,YACnBgB,eAAgBpC,EAAMoB,YAAYgB,mBAGjB,SAACC,GACtB,MAAO,CACHL,WAAY,SAACC,GAAqBI,GAASC,EAAAA,EAAAA,GAA8BL,ULnCjD,SAACM,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAKtC,MAAMF,QACT,SAACsC,GAAD,UAAeE,KAAKtC,SADI,SAAC,KAAD,CAAUK,GAAG,eAHT,GACXkC,EAAAA,WAUhC,OAFqCP,EAAAA,EAAAA,IAAQpC,EAARoC,CAAoCK,KK8B7E,CAGEG","sources":["HOC/WithAuthRedirect.js","webpack://my-app-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n    \r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" /> \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__xg3JU\",\"dialogsItems\":\"Dialogs_dialogsItems__B0z1O\",\"dialogsItem\":\"Dialogs_dialogsItem__E0cJi\",\"dialog\":\"Dialogs_dialog__M7aRF\",\"messages\":\"Dialogs_messages__eG+X1\",\"messageItem\":\"Dialogs_messageItem__+bQrd\",\"realMessages\":\"Dialogs_realMessages__oUoiL\",\"messageCreate\":\"Dialogs_messageCreate__C5bJ6\",\"messageTextArea\":\"Dialogs_messageTextArea__6-Whe\",\"messageButton\":\"Dialogs_messageButton__41Vo3\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\n\r\nfunction DialogItem(props) {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field } from \"redux-form\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nfunction Dialogs(props) {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => {\r\n        return (\r\n            <div className={s.hrItem}>\r\n                <div className={s.dialogsItem}>\r\n                    <img\r\n                        src={d.img}\r\n                        alt=\"avatar\"\r\n                        className={s.avatar}\r\n                    />\r\n                    <DialogItem name={d.name} id={d.id} />\r\n                </div>\r\n                <hr />\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n    )\r\n    let messagesElements = props.dialogsPage.messages.map(m => {\r\n        return (\r\n\r\n            <div className={s.messageItem}>\r\n                <img\r\n                    src={m.img}\r\n                    alt=\"avatar\"\r\n                    className={m.avatar}\r\n                />\r\n                <Message message={m.message} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n    )\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to=\"/login\" />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems} >{dialogsElements}</div>\r\n            <div className={s.messages}>\r\n                <div className={s.realMessages}>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field id={s.messageTextArea} component=\"textarea\" name=\"newMessageBody\" placeholder=\"Write your message here...\"></Field>\r\n            <button id={s.messageButton} > Send</button>\r\n        </form >\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\nexport default Dialogs;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../HOC/WithAuthRedirect\";\r\nimport { createNewMessageActionCreator } from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n\r\n//                     let addMessage = () => {\r\n//                         store.dispatch(createNewMessageActionCreator());\r\n//                     }\r\n\r\n//                     let onMessageChange = (text) => {\r\n//                         store.dispatch(updateNewMessageTextActionCreator(text));\r\n//                     }\r\n\r\n//                     return (\r\n//                         <Dialogs\r\n//                             addMessage={addMessage}\r\n//                             updateNewMessageText={onMessageChange}\r\n//                             dialogsPage={state.dialogsPage}\r\n//                             newMessageText={state.dialogsPage.newMessageText}\r\n//                         />)\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => { dispatch(createNewMessageActionCreator(newMessageBody)); }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","props","path","id","className","s","to","name","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","dialogsElements","dialogsPage","dialogs","map","d","src","img","alt","messagesElements","messages","m","avatar","values","addMessage","newMessageBody","compose","connect","newMessageText","dispatch","createNewMessageActionCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}